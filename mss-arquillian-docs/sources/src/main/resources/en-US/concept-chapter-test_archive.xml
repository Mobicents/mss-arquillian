<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "MSS_Arquillian_Framework_User_Guide.ent">
%BOOK_ENTITIES;
]>
<chapter id="MSS_Arquillian_Framework_Test_Archive_Details">
	<title>Controlling the test archive</title>

	<para>By default, the lifecycle for a test case is like this:</para>
	<para>Container starts -> Deploy the test archive -> Run the test
		methods and get the results
	</para>

	<para>
	There are cases that we need to be able to control when the test archive will be deployed. For example, consider the case where a 
	Sip Servlet during the servletInitialized(SipServletContextEvent ce) method, initiates a call. At this point there will be no sip client to 
	receive this call since the sip client will run and accept calls when the test method will run.  
	</para>

	<para>
	
	</para>

	<para>For this reason the developer should state that the test archive
		is manually managed and provide a name for it, so later he can deploy
		or undeploy manually using the Arquillian Deployer resource.
	</para>
	<para>
		See below an example of a manually managed mode test archive:
		<programlisting>
		<![CDATA[ 	
	@Deployment(name="simple", managed=false, testable=false)
	public static WebArchive createTestArchive()
		  ]]>
		  </programlisting>
	</para>

	<para>
		The developer is now able to deploy/undeploy the test archive as needed. 
	<programlisting>
	<![CDATA[ 	
	@RunWith(Arquillian.class)
	public class ShootistSipServletTest extends SipTestCase{
	....
	@ArquillianResource
	private Deployer deployer;
	....
	@Test
	public void testShootist() throws InterruptedException{
	logger.info("About to deploy the application");
	deployer.deploy(testArchive);
	....
	}
			
	@After
	public void tearDown() throws Exception{
	logger.info("About to un-deploy the application");
	deployer.undeploy(testArchive);
	....
	}
  ]]>
  </programlisting>
	</para>
</chapter>
